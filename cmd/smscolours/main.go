package main

import (
	"fmt"
	"image"
	"image/png"
	"os"
	"path/filepath"

	"github.com/mrcook/smstilemap/gg"
	"github.com/mrcook/smstilemap/sms"
)

const version = "0.1.0"

var usage = `
%s v%s

This small utility will generate PNG files for the colours generated by the
Sega Master System and Game Gear consoles. These files can then be used as
palette files for your favourite sprite editor, e.g. Krita, LibreSprite.

Please specify an output directory for the PNG files:
  %s /path/to/dir/
`

func main() {
	if len(os.Args) != 2 {
		fmt.Printf(usage, os.Args[0], version, os.Args[0])
		os.Exit(0)
	}
	outputDirectory := os.Args[1]
	if info, err := os.Stat(outputDirectory); err != nil || !info.IsDir() {
		fmt.Println("output directory must exist")
		os.Exit(1)
	}

	img := smsColoursToImage()
	err := saveImageToFilename(img, filepath.Join(outputDirectory, "sms-colours.png"))
	if err != nil {
		fmt.Println(err)
		os.Exit(1)
	}

	img = ggColoursToImage()
	err = saveImageToFilename(img, filepath.Join(outputDirectory, "gg-colours.png"))
	if err != nil {
		fmt.Println(err)
		os.Exit(1)
	}
}

func smsColoursToImage() image.Image {
	width := 16
	height := 4

	img := image.NewNRGBA(image.Rectangle{
		Min: image.Point{X: 0, Y: 0},
		Max: image.Point{X: width, Y: height},
	})

	var x, y int
	for _, colour := range sms.AllColours {
		img.Set(x, y, colour.Index)

		x++
		if x >= width {
			x = 0
			y++
		}
	}

	return img
}

func ggColoursToImage() image.Image {
	width := 16 //
	height := 256

	img := image.NewNRGBA(image.Rectangle{
		Min: image.Point{X: 0, Y: 0},
		Max: image.Point{X: width, Y: height},
	})

	var x, y int
	for _, colour := range gg.AllColours {
		img.Set(x, y, colour.Index)

		x++
		if x >= width {
			x = 0
			y++
		}
	}

	return img
}

func saveImageToFilename(img image.Image, filename string) error {
	f, err := os.Create(filename)
	if err != nil {
		return err
	}
	defer f.Close()

	err = png.Encode(f, img)
	if err != nil {
		return err
	}
	return nil
}
